{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-12-31T01:18:37.778125+00:00",
  "repo": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOMMuuSM6PQl5e",
      "title": "Allow hpke-info",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/issues/2",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From: https://mailarchive.ietf.org/arch/msg/jose/ipj36h_QVgijtAGPlKtX8yXK71Y/\r\n\r\nProposed text:\r\n\r\n> For HPKE JWE Integrated Encryption and Key Encryption hpke-info SHOULD be empty, however, if both sender and recipient agree, hpke-info can be set to any value that is consistent with section ___ of RFC9180.\r\n\r\n",
      "createdAt": "2024-07-11T15:31:21Z",
      "updatedAt": "2024-07-12T13:23:08Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 3,
      "id": "I_kwDOMMuuSM6Plmyj",
      "title": "HPKE AAD for JWE Key Encryption",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/issues/3",
      "state": "OPEN",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\r\n\r\n```\r\nhpke-aad SHALL be the FixedInfo part of ECDH-ES Concat KDF input. That is,\r\nconcatenation of AlgorithmID, PartyUInfo, PartyVInfo, SuppPubInfo and\r\nSuppPrivInfo inputs, in that order, as defined in section 4.6.2 of JWA.\r\n```\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/jose/kGF-m5XJunr-M26USFyFeqYoSvw/",
      "createdAt": "2024-07-15T15:17:34Z",
      "updatedAt": "2024-12-06T19:44:43Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ilaril",
          "authorAssociation": "NONE",
          "body": "Related, from the editor's copy:\r\n\r\n> Additionally, the same key MUST NOT be used for both key wrapping and content encryption, as it may introduce security risks.\r\n\r\nThis is problematic on several levels:\r\n- If this practice introduces possible security risks, then JOSE-HPKE is flawed (cryptographic protocols are expected to not rely on operational practices where feasible).\r\n- There are no JWK-level controls for this purpose. Integrated Encryption and Key Encryption use the same \"alg\" values on purpose. And JWK key_ops turns out to be totally busted.\r\n- Forbidding this practice can be expected to cause significant operational issues.\r\n\r\nThis issue is related, because HPKE AAD for Key Encryption is significant for preventing any issues with mixing key wrapping and content encryption.\r\n\r\nAnd some notes about fields used:\r\n- AlgorithmID is not well-defined for Key Encryption. HPKE already binds its ciphersuite, so \"alg\" is redundant. However, using \"enc\" here would protect against bad implementations that allow unsafe bulk ciphers.\r\n- SuppPubInfo contains key length, which is meaningless for HPKE.\r\n- SuppPrivInfo is always empty.\r\n\r\nUsing len32(enc) || enc || len32(PartyUInfo) || PartyUInfo || len32(PartyVInfo) || PartyVInfo as aad for Key Encryption would guarantee safety of mixing key wrapping and content encryption (as nobody is going to use 1.5GB+ enc values).",
          "createdAt": "2024-12-06T19:44:41Z",
          "updatedAt": "2024-12-06T19:44:41Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOMMuuSM6Pln9O",
      "title": "HPKE Integrated Encryption \"enc: dir\"",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/issues/4",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\n> This document defines a new value \"dir\" for \"enc\".\r\n\r\nThis definition needs to be independent of HPKE. The HPKE cipher suites\r\nare then layered on top of this mechanism.\r\n\r\nAnd presumably should include the encryption/decryption procedures\r\nlike sections 5.1. and 5.2. of JWE.\r\n\r\nAs sanity check, the first operations in decryption process should be\r\nthe same as defined in section 5.2 of JWE (I think steps 1 through 5).\r\n```\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/jose/kGF-m5XJunr-M26USFyFeqYoSvw/",
      "createdAt": "2024-07-15T15:19:42Z",
      "updatedAt": "2024-12-05T18:38:20Z",
      "closedAt": "2024-12-05T18:38:19Z",
      "comments": [
        {
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #7 ",
          "createdAt": "2024-12-05T18:38:19Z",
          "updatedAt": "2024-12-05T18:38:19Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOMMuuSM6bsn5w",
      "title": "Algorithm identifiers like HPKE-P256-SHA256-A128GCM are overly verbose",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/issues/8",
      "state": "CLOSED",
      "author": "selfissued",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The \"alg\" values should be short identifiers that fully-specify the computation to be performed. They should not contain syntax that is parsed, such as a required \"HPKE\" string prefix.\r\n\r\nLet's decide on reasonable short identifiers for each of the algorithms - ideally 8 characters each or less.",
      "createdAt": "2024-10-24T17:21:19Z",
      "updatedAt": "2024-12-18T19:48:58Z",
      "closedAt": "2024-12-18T19:48:58Z",
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Hpke Jose Cipher Suite 0 - HPKE-P256-SHA256-A128GCM -> HJCS-0 ?",
          "createdAt": "2024-10-24T17:26:09Z",
          "updatedAt": "2024-10-24T17:26:09Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "`ECDH-ES+A128KW` has obvious structure.\r\n\r\nhttps://www.iana.org/assignments/hpke/hpke.xhtml has the source of truth for the values.\r\n\r\nThere is also the problem of \"why register all these in JOSE / COSE, who actually wants to use them\"",
          "createdAt": "2024-10-24T17:28:29Z",
          "updatedAt": "2024-10-24T17:31:10Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "body": "In order to have meaningful short algorithm names, I propose that we use `alg` names of the form \"HPKEk-a\", where \"k\" is the hexadecimal representation of the HPKE KEM number and \"a\" is the hexadecimal representation of the HPKE AEAD number, both as registered at https://www.iana.org/assignments/hpke/hpke.xhtml.  In particular, I'm proposing these renamings:\r\n\r\n- `HPKE-P256-SHA256-A128GCM` -> `HPKE10-1`\r\n- `HPKE-P384-SHA384-A256GCM` -> `HPKE11-2`\r\n- `HPKE-P521-SHA512-A256GCM` -> `HPKE12-2`\r\n- `HPKE-X25519-SHA256-A128GCM` -> `HPKE20-1`\r\n- `HPKE-X25519-SHA256-ChaCha20Poly1305` -> `HPKE20-3`\r\n- `HPKE-X448-SHA512-A256GCM` -> `HPKE21-2`\r\n- `HPKE-X448-SHA512-ChaCha20Poly1305` -> `HPKE21-2`\r\n\r\nI will create a PR unless people make a counterproposal.",
          "createdAt": "2024-12-05T19:03:56Z",
          "updatedAt": "2024-12-05T19:09:02Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "If we are going to go for shorter names, I think we can skip straight to `HPKE-[0-N]`\r\n\r\nSo that would yield:\r\n\r\n```\r\nHPKE-P256-SHA256-A128GCM -> HPKE-0\r\nHPKE-P384-SHA384-A256GCM -> HPKE-1\r\nHPKE-P521-SHA512-A256GCM -> HPKE-2\r\nHPKE-X25519-SHA256-A128GCM -> HPKE-3\r\nHPKE-X25519-SHA256-ChaCha20Poly1305 -> HPKE-4\r\nHPKE-X448-SHA512-A256GCM -> HPKE-5\r\nHPKE-X448-SHA512-ChaCha20Poly1305 -> HPKE-6\r\n```\r\n\r\n",
          "createdAt": "2024-12-05T19:58:50Z",
          "updatedAt": "2024-12-05T19:59:48Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "body": "The two numbers are aligned to the numbers in the registries at https://www.iana.org/assignments/hpke/hpke.xhtml.  Then were not making anything up.\r\n\r\nI could live with either approach.  What do others think?",
          "createdAt": "2024-12-05T20:06:14Z",
          "updatedAt": "2024-12-05T20:06:14Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "ahh, maybe just `hpke-<kem>-<kdf>-<aead>` but using numbers instead of string labels:\r\n\r\n```\r\nHPKE-P256-SHA256-A128GCM -> HPKE-10-01-01 / HPKE-100101\r\n```",
          "createdAt": "2024-12-05T20:17:41Z",
          "updatedAt": "2024-12-05T20:18:54Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Still seems like it might be better to just go with `hpke-0` though... shorter, and the registration can handle the mapping",
          "createdAt": "2024-12-05T20:19:37Z",
          "updatedAt": "2024-12-05T20:19:37Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "body": "I could support hpke-kem-kdf-aead naming like `HPKE-10-1-1` (leaving off the leading zeros).  I'd rather go with names rooted in the existing HPKE registry than names we're completely making up.",
          "createdAt": "2024-12-05T20:22:23Z",
          "updatedAt": "2024-12-05T20:22:23Z"
        },
        {
          "author": "ilaril",
          "authorAssociation": "NONE",
          "body": "One subtle consideration is that any sort of systematic pattern can be interpreted as adding all the algorithms (since it is obvious what the algorithm name would be). Advantage of being systematic would be eliminating the possibility that an algorithm gets added in subtly incompatible way (which could cause major interoperability headaches).\r\n\r\nThen these algorithms could presumably get used with kty=AKP. There is an obvious interpretation for \"priv\" and \"pub\" in this case (raw HPKE private and public keys).\r\n\r\nHowever, it depends on KEM if it is possible to derive \"pub\" from \"priv\" (and including both causes possible security issue), or not (both are needed). I think KEM 0x30 (which is essentially deprecated) is currently the only one where it is not possible to derive public key from private key.",
          "createdAt": "2024-12-06T20:08:15Z",
          "updatedAt": "2024-12-06T20:08:15Z"
        },
        {
          "author": "ounsworth",
          "authorAssociation": "NONE",
          "body": "My vote (that doesn't count because I'm a tourist in JOSE):\r\n\r\nFully specified is useful so that devs don't need to fish around in the guts of RFCs to figure out what actually makes up a given cipher suite.\r\n\r\nShort-forms over the wire are also fine. I have a slight preference for `HPKE-0` rather than `HPKE10-1` because A) if you have to look it up, then you have to look it up, and B) this scheme may not extend well to hybrid KEMs.",
          "createdAt": "2024-12-11T00:11:48Z",
          "updatedAt": "2024-12-11T00:11:48Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "body": "It also occurred to me that names of the form HPKE-n will probably better correspond to COSE algorithm identifiers, where they will be a single integer anyway.  So unless people voice objections here shortly, I'll plan to create a PR to accomplish that.  Getting to stable algorithm identifiers is a big step towards enabling deployments (something being contemplated at https://github.com/openid/oid4vc-haip/issues/131).",
          "createdAt": "2024-12-11T02:15:27Z",
          "updatedAt": "2024-12-11T02:15:27Z"
        },
        {
          "author": "lee-preimesberger",
          "authorAssociation": "NONE",
          "body": "late to the party, but i really prefer this approach with the short(est) codes.  the verbose tags takes too much space - and like mentioned above if we need to refer back to the RFC anyway smaller is better.",
          "createdAt": "2024-12-12T14:24:12Z",
          "updatedAt": "2024-12-12T14:24:12Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Its also easier to read, write and compare \"HPKE-0\" in contrast to \"HPKE-P256-SHA265-A128GCM\" (review this carefully for a case in point).\r\n",
          "createdAt": "2024-12-12T16:12:32Z",
          "updatedAt": "2024-12-12T16:12:32Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOMMuuSM6jIgme",
      "title": "Support for detached JWE AAD",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/issues/13",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "For various reasons, it makes sense to introduce a mechanism to support **\"detached\" JWE AAD** where the Additional Authenticated Data (AAD) for a JWE is not transmitted in-band but is instead derived by the sender and receiver from contextual information out-of-band. This approach can enhance **security**, **efficiency**, and **flexibility**.\r\n\r\n### Use Case: Mitigating the \"Lazy Verifier\" Problem\r\nOne specific use case arises from **OID4VC**, where detached JWE AAD could help mitigate the so-called \"lazy verifier\" problem. \r\n\r\nIn this scenario:\r\n- A verifier website sends a request to a wallet (typically a native mobile app).\r\n- The wallet responds with an encrypted message, including contextual information (e.g., the request's origin) as part of the AAD in the JWE response.\r\n\r\nThis contextual information is authenticated via AEAD but may not be validated by a \"lazy verifier,\" which skips verifying these fields against their expected values based on the established context. This lack of validation makes the system prone to phishing attacks. For example, the wallet might encode the origin where it received the verifier's request in the AAD, e.g., attacker.com. However, if the verifier does not verify this information, an attacker could exploit the oversight.\r\n\r\nBy requiring the verifier to derive the JWE AAD from contextual information rather than transmitting it in-band:\r\n- The AAD becomes more tightly bound to the verifier's session and context.\r\n- It eliminates the need for explicit validation of the AAD, as the verifier computes it directly from its established session context.\r\n- This reduces the attack surface, making phishing attacks harder to execute.\r\n\r\n### Need for a Generalized Solution\r\nSince **\"detached\" JWE AAD** is not currently defined in the JWE specification and applies to other encryption algorithms (e.g., ECDH-ES), a more general solution could be developed. This would be especially relevant for OID4VC, which uses JARM (JWT Secured Authorization Response Mode, using the JWE compact form) to send encrypted responses. Ensuring compatibility with the JWE compact form would be critical.\r\n\r\n### Proposed Solution\r\n#### JWE JSON Serialization (already supports dedicated `aad` parameter)\r\nFor JWE JSON serialization, the existing `aad` parameter could indicate that the AAD is detached by setting its value to `null`. \r\n\r\n#### JWE Compact Serialization (no dedicated `aad` parameter yet)\r\nFor JWE compact serialization, the format could be extended to optionally include the AAD as an additional segment:\r\n- **Extended Format**: `<Protected Header>.<Encrypted Key>.<Initialization Vector>.<Ciphertext>.<Authentication Tag>.<AAD>`\r\n- **Behavior**:\r\n  - If the `AAD` segment is empty or omitted (e.g., `<Protected Header>.<Encrypted Key>.<Initialization Vector>.<Ciphertext>.<Authentication Tag>.`), it signals that the AAD is detached and must be computed or derived from contextual information by the sender and receiver.\r\n  - The computation of AAD for the AEAD algorithm would follow the same logic as for the JWE JSON form.\r\n\r\nExamples:\r\n- **JWE Compact Form without AAD** (Standard): `<Protected Header>.<Encrypted Key>.<Initialization Vector>.<Ciphertext>.<Authentication Tag>`\r\n- **JWE Compact Form with AAD**: `<Protected Header>.<Encrypted Key>.<Initialization Vector>.<Ciphertext>.<Authentication Tag>.<AAD>`\r\n- **JWE Compact Form with Detached AAD**: `<Protected Header>.<Encrypted Key>.<Initialization Vector>.<Ciphertext>.<Authentication Tag>.`\r\n\r\n### Relevance to OID4VC\r\nThis approach could address challenges in **OID4VC**, particularly in ensuring robust validation of contextual information by the verifier without relying on error-prone implementations. \r\n\r\nFor example:\r\n- Issue [openid/oid4vc-haip#131](https://github.com/openid/oid4vc-haip/issues/131)\r\n- Issue [openid/OpenID4VP#347](https://github.com/openid/OpenID4VP/issues/347)\r\n- Issue [openid/OpenID4VP#65](https://github.com/openid/OpenID4VP/issues/65)",
      "createdAt": "2024-12-12T21:30:43Z",
      "updatedAt": "2024-12-12T21:30:43Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOMMuuSM50nhtw",
      "title": "Pre ietf 120 cutoff",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/1",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "WIP",
      "createdAt": "2024-07-07T17:42:28Z",
      "updatedAt": "2024-07-07T21:42:43Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "0d1ad8c208d3a59538f9a03f6b7a6d73b58f603a",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "pre-ietf-120-cutoff",
      "headRefOid": "80224e0a3adc3caee6ff4eaa738edfb6dc7823c9",
      "closedAt": "2024-07-07T21:42:43Z",
      "mergedAt": "2024-07-07T21:42:43Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "c5109ba44c654952a1d9acd59c016a35099348a6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "PR_kwDOMMuuSM53fKFh",
      "title": "Add Matt Chanda as an author",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/5",
      "state": "CLOSED",
      "author": "selfissued",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Cc @tireddy2 @auriee @hannestschofenig\r\n\r\nIf one of you has Matt's GitHub ID, please also add him in a comment.",
      "createdAt": "2024-08-05T19:14:04Z",
      "updatedAt": "2024-10-24T15:49:50Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "1d21801148e4f9123cf9439e2e32346aa1937531",
      "headRepository": "selfissued/draft-ietf-jose-hpke-encrypt",
      "headRefName": "mbj-matt",
      "headRefOid": "faed9e544eee67328481835d03795b0422b45f3e",
      "closedAt": "2024-10-24T15:49:50Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMMuuSM6ETgw0",
          "commit": {
            "abbreviatedOid": "faed9e5"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-05T19:22:27Z",
          "updatedAt": "2024-08-05T19:22:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOMMuuSM5_y4sd",
      "title": "Tooling update",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/6",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is the result of running:\r\n\r\n```\r\nmake\r\nmake update-files \r\n```\r\n\r\nKeeping tooling up to date.",
      "createdAt": "2024-10-24T15:51:27Z",
      "updatedAt": "2024-10-24T15:52:19Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "1d21801148e4f9123cf9439e2e32346aa1937531",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "tooling-update",
      "headRefOid": "a1b2ff4d8276344042639c86df55e4586d0c9aac",
      "closedAt": "2024-10-24T15:52:19Z",
      "mergedAt": "2024-10-24T15:52:19Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "6e267c725b5379e5747f12df7a4075a61ad654d5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "PR_kwDOMMuuSM5_zQNe",
      "title": "Use enc: dir",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/7",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This pull request simplifies some examples, adds support for HPKE Setup Info, and clarifies the use of \"enc: dir\" for both HPKE JWE modes.",
      "createdAt": "2024-10-24T16:47:32Z",
      "updatedAt": "2024-11-01T08:58:45Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "6e267c725b5379e5747f12df7a4075a61ad654d5",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "enc-dir-jwts",
      "headRefOid": "6785f69024967e797bf382ada9eb515f7b527b6b",
      "closedAt": "2024-11-01T08:52:27Z",
      "mergedAt": "2024-11-01T08:52:27Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "e37f01f5194691497ffc610c8f6622722d9eb70e"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@tireddy2 would you mind merging this, and then making adjustments in https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/9\r\n\r\nWe still have some further alignment to cover, but it would be good to have no open PRs during the week of IETF.\r\n\r\nAnd we can consider publishing a new version when the draft window opens up.",
          "createdAt": "2024-10-31T15:57:16Z",
          "updatedAt": "2024-10-31T15:57:16Z"
        },
        {
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed - the spec will be improved by merging this.  I just approved.\n\nFrom: Orie Steele ***@***.***>\nSent: Thursday, October 31, 2024 8:58 AM\nTo: ietf-wg-jose/draft-ietf-jose-hpke-encrypt ***@***.***>\nCc: Michael B. Jones ***@***.***>; Comment ***@***.***>\nSubject: Re: [ietf-wg-jose/draft-ietf-jose-hpke-encrypt] Use enc: dir (PR #7)\n\n\n@tireddy2<https://github.com/tireddy2> would you mind merging this, and then making adjustments in #9<https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/9>\n\nWe still have some further alignment to cover, but it would be good to have no open PRs during the week of IETF.\n\nAnd we can consider publishing a new version when the draft window opens up.\n\n-\nReply to this email directly, view it on GitHub<https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/7#issuecomment-2450239134>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AB2KJ7QHRSH4YVBNMXMF7JTZ6JHPHAVCNFSM6AAAAABQRQI6LCVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDINJQGIZTSMJTGQ>.\nYou are receiving this because you commented.Message ID: ***@***.******@***.***>>\n",
          "createdAt": "2024-10-31T16:47:41Z",
          "updatedAt": "2024-10-31T16:47:41Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "@OR13 @selfissued - Merged the PR, please review https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/9",
          "createdAt": "2024-11-01T08:58:44Z",
          "updatedAt": "2024-11-01T08:58:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMMuuSM6OpijO",
          "commit": {
            "abbreviatedOid": "795ad44"
          },
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-24T16:59:57Z",
          "updatedAt": "2024-10-24T16:59:58Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n- The recipient unprotected header MUST contain a registered HPKE \"alg\" value.\r\n```\r\nThe \"alg\" value should be registered a short identifier that fully-specifies the computation to be performed.  It should not contain syntax that is parsed, such as a required string prefix.",
              "createdAt": "2024-10-24T16:59:57Z",
              "updatedAt": "2024-10-24T17:01:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6Opl0p",
          "commit": {
            "abbreviatedOid": "795ad44"
          },
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-24T17:03:35Z",
          "updatedAt": "2024-10-24T17:03:36Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "We should deal with this in a different issue, but this is the longest \"alg\" value ever - by far.  They're meant to be short registered identifiers - not strings you can parse.",
              "createdAt": "2024-10-24T17:03:35Z",
              "updatedAt": "2024-10-24T17:03:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6OuP98",
          "commit": {
            "abbreviatedOid": "795ad44"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-25T07:52:49Z",
          "updatedAt": "2024-10-25T07:52:50Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "You may want to replace \"must\" with \"MUST\". ",
              "createdAt": "2024-10-25T07:52:49Z",
              "updatedAt": "2024-10-25T07:52:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6OuVzT",
          "commit": {
            "abbreviatedOid": "795ad44"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-25T08:03:49Z",
          "updatedAt": "2024-10-25T08:03:49Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "we will have to remove the following line from the draft: \r\nThe \"Setup info\" MUST NOT be used with either HPKE JWE Integrated Encryption and HPKE JWE Key Encryption.",
              "createdAt": "2024-10-25T08:03:49Z",
              "updatedAt": "2024-10-25T08:03:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6OuaNz",
          "commit": {
            "abbreviatedOid": "6785f69"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-25T08:11:09Z",
          "updatedAt": "2024-10-25T08:11:09Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "In the case of Key Encryption, what is the need to convey \"enc\" in the recipient unprotected header? I don\u2019t see a need for it in this mode, as the HPKE JWE Key Encryption Mode can function similarly to Key Agreement with ECDH-ES.",
              "createdAt": "2024-10-25T08:11:09Z",
              "updatedAt": "2024-10-25T08:11:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6OugDt",
          "commit": {
            "abbreviatedOid": "6785f69"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-25T08:19:28Z",
          "updatedAt": "2024-10-25T08:19:28Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I think for interoperability we should say the following for both modes :\r\nWhen apu / apv are present, the HPKE Setup info parameter will carry the JOSE context-specific data defined in Section 4.6.2 of [RFC7518].",
              "createdAt": "2024-10-25T08:19:28Z",
              "updatedAt": "2024-10-25T08:19:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6OulSB",
          "commit": {
            "abbreviatedOid": "6785f69"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Most of the changes look good. ",
          "createdAt": "2024-10-25T08:26:01Z",
          "updatedAt": "2024-10-25T08:26:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMMuuSM6PjzY8",
          "commit": {
            "abbreviatedOid": "6785f69"
          },
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-31T16:46:39Z",
          "updatedAt": "2024-10-31T16:46:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOMMuuSM6AhKT8",
      "title": "Address pending issues",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/9",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-10-31T12:43:00Z",
      "updatedAt": "2024-11-01T09:24:33Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "enc-dir-jwts",
      "baseRefOid": "6785f69024967e797bf382ada9eb515f7b527b6b",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "tireddy2-patch-1",
      "headRefOid": "cb07b873a3b6a62d95116600d38b81c94bf805f5",
      "closedAt": "2024-11-01T09:24:33Z",
      "mergedAt": "2024-11-01T09:24:33Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "13bc9096df81c3216a6f558585e1a73d8807b6d3"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good to me, Mike also pointed out the extraneous enc in the recipient, thanks for fixing that",
          "createdAt": "2024-11-01T09:14:12Z",
          "updatedAt": "2024-11-01T09:14:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMMuuSM6Poelx",
          "commit": {
            "abbreviatedOid": "cb07b87"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-01T09:13:11Z",
          "updatedAt": "2024-11-01T09:13:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOMMuuSM6DUmq3",
      "title": "Address comments from Illari",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/10",
      "state": "CLOSED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-27T11:06:00Z",
      "updatedAt": "2024-12-04T14:03:21Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "909853a7e08049eb61036d5f51982a7610028af3",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "tireddy2-patch-2",
      "headRefOid": "1d57849149085140a38b908abb1c9bb478223a58",
      "closedAt": "2024-12-04T14:03:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 11,
      "id": "PR_kwDOMMuuSM6EC9cr",
      "title": "Address comments from the WG",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/11",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-04T14:03:12Z",
      "updatedAt": "2024-12-06T06:22:43Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "909853a7e08049eb61036d5f51982a7610028af3",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "tireddy2-patch-4",
      "headRefOid": "7ca4623a6562c5edfbc6bc665924f9cce9f63381",
      "closedAt": "2024-12-06T06:22:43Z",
      "mergedAt": "2024-12-06T06:22:43Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "256f1d8238d75dc737b6477ddb49592e82a08ab9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMMuuSM6Twjsg",
          "commit": {
            "abbreviatedOid": "1ea7e42"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-04T15:05:03Z",
          "updatedAt": "2024-12-05T06:26:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMMuuSM6TxZHO",
          "commit": {
            "abbreviatedOid": "b19ab2f"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-04T15:59:41Z",
          "updatedAt": "2024-12-04T16:32:59Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "There are some issues with this:\r\n- Section 4.6.2. of RFC7518 does not define what AlgorithmID should be in this case (it only says anything about Direct Key Agreement and Key Agreement with Key Wrapping, and this is neither of those).\r\n- Section 4.6.2. of RFC7518 defines SuppPubInfo to be keydatalen (keydatalen is not well-defined in HPKE).\r\n- Section 4.6.2. of RFC7518 defines SuppPrivInfo to always be empty, so it does nothing.\r\n",
              "createdAt": "2024-12-04T15:59:42Z",
              "updatedAt": "2024-12-04T16:32:59Z"
            },
            {
              "originalPosition": 27,
              "body": "The comment above applies here too.",
              "createdAt": "2024-12-04T16:01:46Z",
              "updatedAt": "2024-12-04T16:32:59Z"
            },
            {
              "originalPosition": 35,
              "body": "This should presumably be a subsection of Security Considerations instead of being its own top-level section.",
              "createdAt": "2024-12-04T16:05:44Z",
              "updatedAt": "2024-12-04T16:32:59Z"
            },
            {
              "originalPosition": 41,
              "body": "Section 9.2.3. of RFC9180 does not say anything about using a single key for multiple algorithms, it talks about using a single key for multiple modes (Base, Auth, PSK, AuthPSK). It notes that this should be safe, even if there is no proof this is the case.\r\n\r\nUsing multiple HPKE algorithm combinations with the same key is safe. However, using the same key with HPKE and non-HPKE is not generically safe. However, unless the non-HPKE mechanism is specifically designed to interact badly with HPKE, bad interactions are unlikely to be possible.",
              "createdAt": "2024-12-04T16:26:58Z",
              "updatedAt": "2024-12-04T16:32:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6T2fi3",
          "commit": {
            "abbreviatedOid": "b19ab2f"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-05T05:55:23Z",
          "updatedAt": "2024-12-05T05:55:23Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "I see reference to Section 9.2.3 of {{RFC9180}] is not correct but we would like to have this behavior to address the comment from Orie, see https://mailarchive.ietf.org/arch/msg/cose/Wb8ueEn71Tx0-ANh4ZdJjvYXJbQ/",
              "createdAt": "2024-12-05T05:55:23Z",
              "updatedAt": "2024-12-05T05:55:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6T2fmv",
          "commit": {
            "abbreviatedOid": "b19ab2f"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-05T05:55:37Z",
          "updatedAt": "2024-12-05T06:08:55Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Yes, fixed. ",
              "createdAt": "2024-12-05T05:55:37Z",
              "updatedAt": "2024-12-05T06:08:55Z"
            },
            {
              "originalPosition": 27,
              "body": "Updated text. ",
              "createdAt": "2024-12-05T05:55:51Z",
              "updatedAt": "2024-12-05T06:08:55Z"
            },
            {
              "originalPosition": 10,
              "body": "Good point, updated text elaborate the use of AlgorithmID and removed the use of SuppPubInfo and SuppPrivInfo.",
              "createdAt": "2024-12-05T06:08:46Z",
              "updatedAt": "2024-12-05T06:08:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6T8dEQ",
          "commit": {
            "abbreviatedOid": "7ca4623"
          },
          "author": "selfissued",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-05T15:43:41Z",
          "updatedAt": "2024-12-05T15:43:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOMMuuSM6FBHT8",
      "title": "Use short algorithm identifiers",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/12",
      "state": "MERGED",
      "author": "selfissued",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "... per the [JOSE naming conventions](https://www.rfc-editor.org/rfc/rfc7518.html#section-1):\r\n> Names defined by this specification are short because a core goal is for the resulting representations to be compact.\r\n\r\nFixes #8",
      "createdAt": "2024-12-12T13:18:05Z",
      "updatedAt": "2024-12-18T19:48:58Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "12d60286191eed280bc5918524cee823b8f1c8a5",
      "headRepository": "selfissued/draft-ietf-jose-hpke-encrypt",
      "headRefName": "mbj-shorter-algs",
      "headRefOid": "b395be7258a5f7736281e4452064064e6bb4045d",
      "closedAt": "2024-12-18T19:48:58Z",
      "mergedAt": "2024-12-18T19:48:57Z",
      "mergedBy": "selfissued",
      "mergeCommit": {
        "oid": "d3c6d5120c128e0001b051718a62f3c87b27ea40"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMMuuSM6VAGkK",
          "commit": {
            "abbreviatedOid": "b395be7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Assuming there is consensus to apply these names consistently to COSE:\r\n\r\nhttps://github.com/cose-wg/HPKE/pull/60",
          "createdAt": "2024-12-12T14:32:17Z",
          "updatedAt": "2024-12-12T14:32:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOMMuuSM6FUXte",
      "title": "Define JOSE-HPKE for other specs",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/14",
      "state": "OPEN",
      "author": "ilaril",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This attempts to define JOSE-HPKE as a generic mechanism other specifications defining cipher suites can refer to.\r\n\r\nThis avoids having other specifications adding cipher suites essentially re-define JOSE-HPKE (or leave a lot implicit). Not only is that tedious, it is also error-prone.\r\n\r\nThis rewrites a large part of section 4. There are quite a bit of technical changes. Most of those changes are to align how Key Encryption works with the requirements in JWE. AAD construction for Key Encryption is also changed, the new construction should pose less implementation difficulties and addresses both cross-mode and oracle attacks, even if JOSE implementation omits mandatory checks. Finally, this also defines how keys (including AKP) work.\r\n\r\nNeeds a lot of wordsmithing (and I copied text from original that I think needs editorial improvement).\r\n",
      "createdAt": "2024-12-16T08:28:07Z",
      "updatedAt": "2024-12-28T10:56:06Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "12d60286191eed280bc5918524cee823b8f1c8a5",
      "headRepository": "ilaril/JOSE-HPKE",
      "headRefName": "generic-jose-hpke",
      "headRefOid": "e3129f7a705e953139cc1aa0e2ea2a88e893f628",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I recommend merging this in 1 week, unless there are objections.",
          "createdAt": "2024-12-16T14:33:53Z",
          "updatedAt": "2024-12-16T14:33:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMMuuSM6VY-LI",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-16T14:29:16Z",
          "updatedAt": "2024-12-16T14:29:16Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "I don't have an objection to this, but ideally we have something similar in the COSE draft, and cross references between the two to make this easier to understand.",
              "createdAt": "2024-12-16T14:29:16Z",
              "updatedAt": "2024-12-16T14:29:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6VY-8r",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-16T14:30:30Z",
          "updatedAt": "2024-12-16T14:30:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOMMuuSM6WW2XT",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T12:26:47Z",
          "updatedAt": "2024-12-25T13:02:13Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Why explicitly discuss about \u201czip\u201d parameter,  the draft does not do anything new with compressing plaintext data. It was discussed in the previous versions of the draft and removed for this reason.",
              "createdAt": "2024-12-25T12:26:48Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 108,
              "body": "How is the Recipient Context defined in Section 4.2 used by HPKE ?",
              "createdAt": "2024-12-25T12:27:29Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 108,
              "body": "Why is the Recipient Context not used for JWE Integrated Encryption ?",
              "createdAt": "2024-12-25T12:28:05Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 73,
              "body": "Why is the HPKE Setup info not used to convey the JOSE context-specific data (enc, apu and apv) ?\r\nFor example TLS ECH uses both aad and info, and the size of HPKE setup info is much larger than 64 bytes. TLS ECH is already supported by browsers. ",
              "createdAt": "2024-12-25T12:32:26Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 250,
              "body": "I prefer to use \"MUST NOT\" instead of \"SHOULD NOT\". I don't think \"authentication key\" is defined anywhere in this doc and HPKE draft. It needs to be defined. ",
              "createdAt": "2024-12-25T12:36:47Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 252,
              "body": "I prefer to use \"MUST NOT\" instead of \"SHOULD NOT\". ",
              "createdAt": "2024-12-25T12:38:01Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 255,
              "body": "If the key is compromised in one of the modes, it will impact the other mode, what is the use case to allow the same key for both Integrated Encryption and Key Encryption ?",
              "createdAt": "2024-12-25T12:50:58Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 243,
              "body": "please elaborate on the insecurity issue. ",
              "createdAt": "2024-12-25T12:53:52Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 61,
              "body": "Replace \"SHALL\" with \"MUST\"",
              "createdAt": "2024-12-25T12:59:43Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 62,
              "body": "Replace \"SHALL\" with \"MUST\"",
              "createdAt": "2024-12-25T12:59:58Z",
              "updatedAt": "2024-12-25T13:02:13Z"
            },
            {
              "originalPosition": 63,
              "body": "Replace all occurrences of \"SHALL\" with \"MUST\" (lines 183 to 192). ",
              "createdAt": "2024-12-25T13:01:39Z",
              "updatedAt": "2024-12-25T13:03:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNIF",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:03:56Z",
          "updatedAt": "2024-12-25T22:03:56Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "JWE does not define what happens with Integrated Encryption.",
              "createdAt": "2024-12-25T22:03:56Z",
              "updatedAt": "2024-12-25T22:03:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNJX",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:05:17Z",
          "updatedAt": "2024-12-25T22:05:17Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "As aad input in the Key Encryption case.",
              "createdAt": "2024-12-25T22:05:17Z",
              "updatedAt": "2024-12-25T22:05:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNMm",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:08:30Z",
          "updatedAt": "2024-12-25T22:08:30Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Because it is not enough for that case: One needs to authenticate the protected header and JWE AAD.",
              "createdAt": "2024-12-25T22:08:30Z",
              "updatedAt": "2024-12-25T22:08:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNV9",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:17:27Z",
          "updatedAt": "2024-12-25T22:17:27Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "That is to leave the HPKE setup info free for application to use for actual context binding.  Apu and apv in JOSE are pretty much completely broken.\r\n\r\nAlso, it is unsound to allow any aad,info pair to be valid for both Integrated Encryption and Key Encryption.",
              "createdAt": "2024-12-25T22:17:27Z",
              "updatedAt": "2024-12-25T22:37:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNek",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:26:03Z",
          "updatedAt": "2024-12-25T22:26:03Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "Looking at HPKE RFC, I think it should be \"sender key\" instead of \"authentication key\".",
              "createdAt": "2024-12-25T22:26:03Z",
              "updatedAt": "2024-12-25T22:26:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNoP",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:34:26Z",
          "updatedAt": "2024-12-25T22:34:26Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Restricting key to one mode does not help against key compromise, as any such compromise must involve mechanisms outside JOSE-HPKE.\r\n\r\nIntegrated Encryption is more straightforward for one recipient, but can not handle multiple recipients.",
              "createdAt": "2024-12-25T22:34:26Z",
              "updatedAt": "2024-12-25T22:34:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXNwe",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:41:59Z",
          "updatedAt": "2024-12-25T22:41:59Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Anyone that has access to CEK can alter the message by just encrypting a new one and replacing the protected headers / ciphertext.",
              "createdAt": "2024-12-25T22:41:59Z",
              "updatedAt": "2024-12-25T22:41:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WXN3p",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-25T22:48:14Z",
          "updatedAt": "2024-12-25T22:48:14Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Thinking about it, switching between keywords with no defined or obvious pattern (but in this case there is a pattern) looks odd.",
              "createdAt": "2024-12-25T22:48:14Z",
              "updatedAt": "2024-12-25T22:48:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYG4w",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T07:32:41Z",
          "updatedAt": "2024-12-26T07:32:41Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Yes, while \"SHALL\" and \"MUST\" both indicate mandatory requirements, I prefer sticking to one term in the document which would improve consistency and clarity.",
              "createdAt": "2024-12-26T07:32:41Z",
              "updatedAt": "2024-12-26T07:32:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYI1A",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T07:42:35Z",
          "updatedAt": "2024-12-26T07:42:35Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "It is not clear to me why the Authenticated HPKE mode cannot be used \r\nwith Key Encryption ?\r\n\r\n",
              "createdAt": "2024-12-26T07:42:35Z",
              "updatedAt": "2024-12-26T07:42:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYK9s",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T07:53:36Z",
          "updatedAt": "2024-12-26T07:53:37Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Why a key needs to be used for both Integrated Encryption and Key Encryption modes ?\r\n\r\nIt would also introduce additional complexity of multiple key_ops (derivebits and wrapKey).\r\nI don't see any such rule defined in in JWE which allows a key to be re-used for direct key agreement and key encryption modes.",
              "createdAt": "2024-12-26T07:53:37Z",
              "updatedAt": "2024-12-26T08:30:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYLYo",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T07:55:31Z",
          "updatedAt": "2024-12-26T07:55:31Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "I can't find the term \"sender key\" in HPKE RFC. ",
              "createdAt": "2024-12-26T07:55:31Z",
              "updatedAt": "2024-12-26T07:55:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYR0z",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T08:25:51Z",
          "updatedAt": "2024-12-26T08:25:51Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "If apu and apv in JOSE are pretty much completely broken. why use it in the Recipient context ? \r\nWhat about the \"JWE Additional Authenticated Data encryption parameter\" defined in Step 14 of Section 5.1 of RFC7516 ?  \r\nIt needs to be used for both modes.",
              "createdAt": "2024-12-26T08:25:51Z",
              "updatedAt": "2024-12-26T08:29:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYSB1",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T08:26:42Z",
          "updatedAt": "2024-12-26T08:26:43Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "I meant the HPKE Setup info can be used to be carry the Recipient context in case of JWE Integrated Encryption. ",
              "createdAt": "2024-12-26T08:26:42Z",
              "updatedAt": "2024-12-26T08:26:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYSnf",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T08:29:41Z",
          "updatedAt": "2024-12-26T08:29:41Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "If apu and apv is broken, why use it for key encryption mode ?\r\n",
              "createdAt": "2024-12-26T08:29:41Z",
              "updatedAt": "2024-12-26T08:30:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYl9o",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T09:57:38Z",
          "updatedAt": "2024-12-26T09:57:39Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Apu and apv were included before, I guess to maintain parity with Key Agreement.\r\n\r\nAnd both modes do include JWE AAD. It is part of \"Additional Authenticated Data encryption parameter\", which then gets fed as aad to bulk encryption (either HPKE or JWE native bulk encryption).",
              "createdAt": "2024-12-26T09:57:39Z",
              "updatedAt": "2024-12-26T09:57:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYnVI",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T10:04:18Z",
          "updatedAt": "2024-12-26T10:04:18Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "That would require multiplexing that field, since HPKE Setup info is also used for non-broken context binding from application.",
              "createdAt": "2024-12-26T10:04:18Z",
              "updatedAt": "2024-12-26T10:04:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYnv6",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T10:06:19Z",
          "updatedAt": "2024-12-26T10:06:19Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I included because it was there before, I can only speculate why it was there.",
              "createdAt": "2024-12-26T10:06:19Z",
              "updatedAt": "2024-12-26T10:06:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYpe-",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T10:13:42Z",
          "updatedAt": "2024-12-26T10:13:43Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "I got that from reading section 5.1.3...\r\n\r\nThe notation section implies that the terms are \"sender role\" and \"recipient role\". So presumably the statement should be:\r\n\r\nA single key SHOULD NOT be used in both sender and recipient roles, as this has not been proven to be safe.\r\n",
              "createdAt": "2024-12-26T10:13:43Z",
              "updatedAt": "2024-12-26T10:13:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYr5k",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T10:22:53Z",
          "updatedAt": "2024-12-26T10:22:53Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "It is operationally easier to allow both. And AFAIK there is no good reasons to disallow it (where \"it might not be safe\", e.g., mixing sender and recipient roles, would count as a good reason).\r\n\r\nI think key_ops are just totally busted. And it would not need multiple key_ops: Both invoke HPKE, which I think is derivebits (not sure given the mess that is key_ops).",
              "createdAt": "2024-12-26T10:22:53Z",
              "updatedAt": "2024-12-26T10:22:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYtOk",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T10:25:59Z",
          "updatedAt": "2024-12-26T10:25:59Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Put another way, using Authenticated HPKE with Key Encryption would authenticate the CEK. Which does not even indirectly authenticate the actual message.\r\n\r\nWhereas Authenticated HPKE with Integrated Encryption does authenticate protected headers, JWE AAD and the  message plaintext.",
              "createdAt": "2024-12-26T10:25:59Z",
              "updatedAt": "2024-12-26T10:25:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WYuil",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T10:32:26Z",
          "updatedAt": "2024-12-26T10:32:26Z",
          "comments": [
            {
              "originalPosition": 252,
              "body": "Regarding these two, it might be useful to define \"use\" values for the two roles (e.g., \"HPKE\" and \"HPKE-auth\"), in order to signal that a key is only meant for HPKE recipient role, or HPKE sender role.\r\n\r\nAFAIK, registered \"crv\" values for EC2 and OKP key types can represent any currently valid HPKE sender role key pair.",
              "createdAt": "2024-12-26T10:32:26Z",
              "updatedAt": "2024-12-26T10:32:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZFUc",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T12:42:57Z",
          "updatedAt": "2024-12-26T12:42:57Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "The problem is JWE AAD is not included in the Key Encryption mode, it is only included in the Integrated Encryption mode.  It needs to be fixed; it was included in both modes in the latest published version of the draft. \r\n\r\nOne possible solution for both modes would be use HPKE Setup info to carry the Recipient Context. In both modes, JWE AAD should be conveyed in HPKE aad. ",
              "createdAt": "2024-12-26T12:42:57Z",
              "updatedAt": "2024-12-26T12:42:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZHv0",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T12:53:49Z",
          "updatedAt": "2024-12-26T12:53:50Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Yes, if apu and apv are empty then info carries the context binding from the application. ",
              "createdAt": "2024-12-26T12:53:49Z",
              "updatedAt": "2024-12-26T12:53:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZIUv",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T12:56:59Z",
          "updatedAt": "2024-12-26T12:56:59Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I prefer including them in both modes to maintain consistency with Section 4.6.2 of RFC 7518, or alternatively, not including them with an explanation that it is broken.",
              "createdAt": "2024-12-26T12:56:59Z",
              "updatedAt": "2024-12-26T12:57:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZJpQ",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T13:04:18Z",
          "updatedAt": "2024-12-26T13:04:18Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "Why would an application use the same key for sender and recipient roles ?\r\nI don't see this attack discussed in HPKE.\r\n",
              "createdAt": "2024-12-26T13:04:18Z",
              "updatedAt": "2024-12-26T13:04:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZKF7",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T13:06:55Z",
          "updatedAt": "2024-12-26T13:06:55Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "I prefer to keep it simple, managing keys for multiple purposes within the same system increases the complexity of key management and raises the risk of implementation errors. ",
              "createdAt": "2024-12-26T13:06:55Z",
              "updatedAt": "2024-12-26T13:06:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZMVW",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T13:17:50Z",
          "updatedAt": "2024-12-26T13:17:50Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Authenticated HPKE already authenticates the CEK, ensuring it originates from the sender. The plaintext is then encrypted using AEAD, which provides both confidentiality and authentication for the message.\r\n\r\nWhy does the receiver need stronger assurances that the plaintext itself is cryptographically bound to the sender's identity? The CEK is authenticated, and the AEAD encryption protects the plaintext's integrity and confidentiality.\r\n\r\nCould you clarify the specific threat model where this additional assurance becomes critical? \r\n\r\nI don\u2019t see the threat.",
              "createdAt": "2024-12-26T13:17:50Z",
              "updatedAt": "2024-12-26T13:17:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZo24",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T15:43:59Z",
          "updatedAt": "2024-12-26T15:43:59Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "It **is** included in Key Encryption mode, as JWE implicitly includes it.\r\n\r\nIntegrated Encryption has to explicitly include it, because it bypasses the parts of JWE that normally ensure that JWE AAD gets included.\r\n\r\n",
              "createdAt": "2024-12-26T15:43:59Z",
              "updatedAt": "2024-12-26T15:43:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZp2D",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T15:50:13Z",
          "updatedAt": "2024-12-26T15:50:13Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "If message has apu or apv and application specifies context, what then? Overriding the context from application is not acceptable.",
              "createdAt": "2024-12-26T15:50:13Z",
              "updatedAt": "2024-12-26T15:50:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZulu",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T16:20:43Z",
          "updatedAt": "2024-12-26T16:20:43Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "Section 4.6.2 is only applicable to Key Agreement, which HPKE is not (the internal structure of HPKE is irrelevant here).\r\n\r\nConsistency would be to other Key Encryption algorithms, which do not support apu nor apv. The \"enc\" ensures that cross-mode attack is not possible, and that bad JWE implementations are not exposed to oracle attack.\r\n\r\nAFAICT, apu and apv are just useless in JWE. The arguments for those only hold for ECDH-SS or implicit apu, and the section 4.6.2 context structure would not work for ECDH-SS (no place to put the nonce required for security) nor does it allow implicit apu.",
              "createdAt": "2024-12-26T16:20:43Z",
              "updatedAt": "2024-12-26T16:58:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZwik",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T16:33:10Z",
          "updatedAt": "2024-12-26T16:33:10Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "I guess application could use the same key for sender and recipient roles because it is easier. It is not good cryptographic practice.\r\n\r\nLast paragraph of section 9.2.3. The paragraph talks about using key in multiple \"modes\", but the only possible issue is with using the same key in both sender and recipient roles. Most likely that is not an issue, but there is no proof of that.",
              "createdAt": "2024-12-26T16:33:10Z",
              "updatedAt": "2024-12-26T16:33:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZx4H",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T16:41:13Z",
          "updatedAt": "2024-12-26T16:41:13Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Not tracking the purpose is simpler.\r\n\r\nAnd given this is asymmetric encryption, the purpose would have to be expressible in public keys.",
              "createdAt": "2024-12-26T16:41:13Z",
              "updatedAt": "2024-12-26T16:41:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WZzb1",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-26T16:51:58Z",
          "updatedAt": "2024-12-26T16:51:59Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "If there are multiple recipients in the original message, the message authentication breaks down since any other recipient might have forged the message.\r\n\r\nChecking for one recipient does not work: The number of recipients is not authenticated, so attacker might have stripped all recipients except the target, so the message appears to have just a single recipient.",
              "createdAt": "2024-12-26T16:51:58Z",
              "updatedAt": "2024-12-26T16:51:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6Wa9MA",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T04:30:22Z",
          "updatedAt": "2024-12-27T04:30:22Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "In the revised Key Encryption Section, HPKE aad only carries the Recipient Context. JWE AAD needs to be conveyed in the HPKE aad. ",
              "createdAt": "2024-12-27T04:30:22Z",
              "updatedAt": "2024-12-27T04:30:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6Wa9d0",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T04:33:09Z",
          "updatedAt": "2024-12-27T04:33:09Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "I don't see existing JWE spec allows application context to be used as aad. what is the need in JWE HPKE to carry the application specific context ?\r\nIf application specific context is required, recipient context can be concatenated to application specific context. ",
              "createdAt": "2024-12-27T04:33:09Z",
              "updatedAt": "2024-12-27T04:33:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbEJQ",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T05:12:12Z",
          "updatedAt": "2024-12-27T05:12:12Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "Agreed, I propose to update the text as follows::\r\nA single key MUST NOT be used in both sender and recipient roles. Avoiding the use of the same key for both sender and recipient roles ensures clear cryptographic boundaries and minimizes unintended interactions.",
              "createdAt": "2024-12-27T05:12:12Z",
              "updatedAt": "2024-12-27T05:12:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbFBk",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T05:19:41Z",
          "updatedAt": "2024-12-27T05:19:41Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Yes, if any recipient acts as a MiTM to modify the message or strip the recipient list, such an attack cannot be detected in JWE, even when Authenticated HPKE is not used. ",
              "createdAt": "2024-12-27T05:19:41Z",
              "updatedAt": "2024-12-27T05:19:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbGVw",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T05:28:14Z",
          "updatedAt": "2024-12-27T05:28:15Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "I prefer to prioritize simplicity: each key should have a well-defined, single purpose. This approach minimizes risk and aligns with the principle of least privilege in cryptographic systems. If there is a strong operational need to allow key reuse, it should be clearly documented along with the associated trade-offs, potential risks and use of multiple key_ops.",
              "createdAt": "2024-12-27T05:28:14Z",
              "updatedAt": "2024-12-27T05:28:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbIbT",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T05:38:27Z",
          "updatedAt": "2024-12-27T05:38:27Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I don't see any specification stating that apu and apv are useless in JWE. Until there is consensus in the WG, we will need to include apu and apv in both modes. As an alternative, we could consider explicitly documenting the decision to exclude apu and apv and explain that they are not necessary for HPKE in JWE. This would provide clarity to implementers and trigger further discussion within the WG",
              "createdAt": "2024-12-27T05:38:27Z",
              "updatedAt": "2024-12-27T05:38:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbpoQ",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T08:42:26Z",
          "updatedAt": "2024-12-27T08:42:27Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "No, it does not need to be conveyed in the HPKE aad. JWE handles JWE AAD itself for all its algorithms.",
              "createdAt": "2024-12-27T08:42:26Z",
              "updatedAt": "2024-12-27T08:46:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbrjM",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T08:50:22Z",
          "updatedAt": "2024-12-27T08:50:23Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Someone requested ability to use the HPKE setup info for implicit context binding. The easiest way to implement that is to default the HPKE setup info to empty (using aad for recipient context) unless application specifies a value.\r\n\r\nWhich is what this PR does.",
              "createdAt": "2024-12-27T08:50:22Z",
              "updatedAt": "2024-12-27T08:50:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbsOG",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T08:53:41Z",
          "updatedAt": "2024-12-27T08:53:41Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "No current Key Encryption algorithm supports apu nor apv. That would be one reason to exclude those.",
              "createdAt": "2024-12-27T08:53:41Z",
              "updatedAt": "2024-12-27T08:53:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbtPV",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T08:58:46Z",
          "updatedAt": "2024-12-27T08:58:46Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "AFACIT, there are no trade-offs and no risks beyond those inherit in having an implementation for both.\r\n\r\nAnd what key_ops does HPKE use anyway? I know some implementation used DeriveBits because that was required to enable the needed interfaces.",
              "createdAt": "2024-12-27T08:58:46Z",
              "updatedAt": "2024-12-27T08:58:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WbtfK",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T09:00:05Z",
          "updatedAt": "2024-12-27T09:00:05Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Such message does not even pretend to be authenticated (unless done by external means like signatures).",
              "createdAt": "2024-12-27T09:00:05Z",
              "updatedAt": "2024-12-27T09:00:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WcNtX",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T11:28:47Z",
          "updatedAt": "2024-12-27T11:28:48Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "I propose to modify the text as follows:\r\nAuthenticated HPKE modes MUST NOT be used for Key Encryption, as the message is not authenticated. Any recipient could act as a man-in-the-middle (MitM) and modify the message.",
              "createdAt": "2024-12-27T11:28:47Z",
              "updatedAt": "2024-12-27T11:28:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WcQzA",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T11:47:32Z",
          "updatedAt": "2024-12-27T11:47:33Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Yes, but why did you delete most of the existing text in Section 6 (Key Encryption) ?",
              "createdAt": "2024-12-27T11:47:32Z",
              "updatedAt": "2024-12-27T11:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WcRSS",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T11:50:37Z",
          "updatedAt": "2024-12-27T11:50:38Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "I don\u2019t see any issues raised on GitHub or discussions in the WG regarding the need for application-specific context. Why is this requirement specific to JWE HPKE and not ECDH-ES ?",
              "createdAt": "2024-12-27T11:50:38Z",
              "updatedAt": "2024-12-27T11:50:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WcSUq",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T11:56:59Z",
          "updatedAt": "2024-12-27T11:56:59Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "As per Section 4.6.2 of RFC 7518, both apu and apv are used to derive the key which is used to encrypt the CEK. ",
              "createdAt": "2024-12-27T11:56:59Z",
              "updatedAt": "2024-12-27T11:56:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WcTKz",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T12:01:47Z",
          "updatedAt": "2024-12-27T12:01:47Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "I disagree. Combining multiple key_ops (e.g., encryption and derivation) can lead to unintended consequences in certain scenarios, such as algorithm confusion or key misuse across contexts. I suggest raising this issue on the WG mailing list for further discussion.",
              "createdAt": "2024-12-27T12:01:47Z",
              "updatedAt": "2024-12-27T12:01:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6Wcch5",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T12:51:58Z",
          "updatedAt": "2024-12-27T12:51:58Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Most of that section was just repeating stuff from JWE, often not quite correctly.",
              "createdAt": "2024-12-27T12:51:58Z",
              "updatedAt": "2024-12-27T12:51:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6Wcd14",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T12:59:28Z",
          "updatedAt": "2024-12-27T12:59:28Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "It was one mailing list post. However, I think this mechanism does not work correctly, and should be ripped out.\r\n\r\nExpanding a bit on the issue: While one could do things like extract the key thumbprint from envelope signature and then use that as implicit context (to bind the message to its origin), that only being supported for HPKE and not other algorithms is a footgun.\r\n\r\nIf application wants to bind message to its origin, it should stick whatever context data it is using to either JWE AAD or to protected headers and then check that on decryption.\r\n\r\n(Applicability to COSE: everything meant to be usable at layer0 should support external aad, e.g. by using Enc_structure; HPKE in COSE / COSE-HPKE does that.)",
              "createdAt": "2024-12-27T12:59:28Z",
              "updatedAt": "2024-12-28T19:09:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WchNu",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T13:17:15Z",
          "updatedAt": "2024-12-27T13:17:15Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "And there is an attack that exploits precisely that behavior (and there is an analog of that against HPKE that can not be fixed). Basically,  apu and apv in JWE are broken beyond repair.\r\n\r\nThe apu and apv stuff should just be ripped out.\r\n\r\nExpanding a bit on the issue: There is no authentication on the apu and apv values, so an attacker that has the public key of the victim can just set those fields to arbitrary values Then if using Key Agreement with Key Wrapping (or HPKE), the attacker can also set CEK to arbitrary value.\r\n\r\nParty U Info and Party V Info are only usable with ECDH-SS (or some authenticated ECDH construction), where attacker can not just specify arbitrary values. And it is really only useful for ECDH-SS, which otherwise would have directional symmetry, that could allow attacks (that symmetry is quoted as the reason for Party U Info and Party V Info). \r\n\r\n(Applicability to COSE: COSE does support ECDH-SS, where PartyUInfo and PartyVInfo are actually useful, and PartyUInfo.nonce is crucial for security. However, for everything else, those fields are useless.)",
              "createdAt": "2024-12-27T13:17:15Z",
              "updatedAt": "2024-12-28T19:15:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WcjRy",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-27T13:28:15Z",
          "updatedAt": "2024-12-27T13:28:15Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Neither algorithm confusion nor key misuse across contexts is possible with JOSE-HPKE recipient role keys. To get either, one would have to use the same key with sender role, or with something else, and both are NOT RECOMMENDED.",
              "createdAt": "2024-12-27T13:28:15Z",
              "updatedAt": "2024-12-27T13:28:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WeSq3",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-28T05:09:28Z",
          "updatedAt": "2024-12-28T05:09:28Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "I don\u2019t see any issues with removing the redundant content from JWE. However, I will need to review all the changes to ensure that no relevant text is removed. I noticed the following:\r\n\r\n1. Section 4.2 is removed.\r\n2. In Key Encryption section, the latest version of the draft says encrypted_key is base64url encoded content\r\n    encryption key but in the PR it says encrypted_key carries the raw enc output.",
              "createdAt": "2024-12-28T05:09:28Z",
              "updatedAt": "2024-12-28T05:09:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WeUv7",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-28T05:13:42Z",
          "updatedAt": "2024-12-28T05:13:42Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Agreed. I will post a message on the JOSE WG mailing list after the holidays to close the issue.",
              "createdAt": "2024-12-28T05:13:42Z",
              "updatedAt": "2024-12-28T05:13:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WeUx-",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-28T05:15:06Z",
          "updatedAt": "2024-12-28T05:15:06Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "I will raise an issue on GitHub and start a thread on the JOSE WG mailing list after the holidays.",
              "createdAt": "2024-12-28T05:15:06Z",
              "updatedAt": "2024-12-28T05:15:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6WeYbE",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-28T05:36:53Z",
          "updatedAt": "2024-12-28T05:36:53Z",
          "comments": [
            {
              "originalPosition": 255,
              "body": "Is it a common practice to reuse the key in different modes, ?\r\nwhat is the use case to use the same key for JWE Integrated Encryption and Key Encryption ?",
              "createdAt": "2024-12-28T05:36:53Z",
              "updatedAt": "2024-12-28T05:49:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMMuuSM6We9Wy",
          "commit": {
            "abbreviatedOid": "e3129f7"
          },
          "author": "ilaril",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-28T10:56:05Z",
          "updatedAt": "2024-12-28T10:56:06Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "Regarding 1., that section was redundant with specified HPKE I/O mappings.\r\n\r\nRegarding 2., Note that the PR says \"JWE Encrypted Key\", not \"encrypted_key\".  JWE specifies that the latter is base64url encoding of the former. So the field ends up base64url-encoded.\r\n\r\nFor the \"ek\" parameter, there is no automatic base64url-encoding, so the PR explicitly specifies base64url endec.",
              "createdAt": "2024-12-28T10:56:06Z",
              "updatedAt": "2024-12-28T10:56:06Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOMMuuSM6GBIY-",
      "title": "Undo author info update",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/15",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Author info update caused strange behavior",
      "createdAt": "2024-12-22T16:15:36Z",
      "updatedAt": "2024-12-22T16:16:11Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "14f38ab5a9a38b21bd039abc7610688b8e7cbadd",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "774588d8eee453baa0ea8a5332604120a69ade78",
      "closedAt": "2024-12-22T16:16:08Z",
      "mergedAt": "2024-12-22T16:16:08Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "308b0140067d65da7de46529a8f3694ff307d5d2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOMMuuSM6GBJM6",
      "title": "Author Info Update",
      "url": "https://github.com/ietf-wg-jose/draft-ietf-jose-hpke-encrypt/pull/16",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-12-22T16:25:52Z",
      "updatedAt": "2024-12-22T16:33:38Z",
      "baseRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "baseRefName": "main",
      "baseRefOid": "308b0140067d65da7de46529a8f3694ff307d5d2",
      "headRepository": "ietf-wg-jose/draft-ietf-jose-hpke-encrypt",
      "headRefName": "hannestschofenig-patch-1",
      "headRefOid": "a0220d1df6d1d3883a80ca9148064796346f364e",
      "closedAt": "2024-12-22T16:33:31Z",
      "mergedAt": "2024-12-22T16:33:31Z",
      "mergedBy": "hannestschofenig",
      "mergeCommit": {
        "oid": "81a3d8a206cfda9fa3b7336e1a8353ca0ab3b21d"
      },
      "comments": [],
      "reviews": []
    }
  ]
}